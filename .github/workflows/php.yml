name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
     runs-on: ubuntu-latest

     services:
       mysql:
         image: mysql:latest
         env:
           MYSQL_ALLOW_EMPTY_PASSWORD: false
           MYSQL_ROOT_PASSWORD: password
           MYSQL_DATABASE: laravel
         ports:
            - 3306/tcp
         options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

     strategy:
        fail-fast: false
        matrix:
          php-versions: ['7.4', '8.0', '8.1']
     steps:
        - uses: actions/checkout@v3

        - name: Validate composer.json and composer.lock
          run: composer validate --strict

        - name: Cache Composer packages
          id: composer-cache
          uses: actions/cache@v3
          with:
            path: vendor
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-

        - name: before_install
          run: mysql -e 'CREATE DATABASE agorakit_testing;'

        - name: Install dependencies
          run: composer install --prefer-dist --no-progress

        - name: Prepare the application
          run: |
            php -r "file_exists('.env') || copy('.env.travis', '.env');"
            composer self-update
            composer install --no-interaction
            php artisan key:generate
            echo "USE mysql;\nUPDATE user SET authentication_string=password('root') WHERE user='root';\nFLUSH PRIVILEGES;\n" | mysql -u root

        - name: Test with phpunit
          run: vendor/bin/phpunit --coverage-text
